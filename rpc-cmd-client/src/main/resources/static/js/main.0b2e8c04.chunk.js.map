{"version":3,"sources":["context.js","pages/Login.js","pages/Cmd.js","App.js","index.js"],"names":["LoginContext","createContext","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","useState","loading","setLoading","setIsLogin","useContext","useEffect","localStorage","getItem","hideRequiredMark","name","initialValues","remember","onFinish","values","fetch","method","headers","body","JSON","stringify","then","res","a","ok","json","code","msg","message","token","success","setItem","error","window","alert","onFinishFailed","errorInfo","console","log","Item","label","rules","required","type","htmlType","Search","Input","Cmd","Info","setInfo","title","onSearch","cmd","resp","str","id","length","removeItem","placeholder","enterButton","extra","onClick","e","map","item","style","marginTop","index","findIndex","obj","newInfo","parse","splice","split","App","isLogin","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b2e8c04.chunk.js","sourcesContent":["import { createContext } from 'react';\r\nconst LoginContext = createContext(null);\r\nexport default LoginContext;\r\n","import { Form, Input, Button, message } from 'antd';\r\nimport LoginContext from '../context';\r\nimport { useContext, useEffect, useState } from 'react';\r\nconst baseUrl = 'http://172.30.67.81:8080';\r\nconst layout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 4,\r\n    span: 16,\r\n  },\r\n};\r\nconst Login = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const { setIsLogin } = useContext(LoginContext);\r\n  useEffect(() => {\r\n    if (localStorage.getItem('token')) setIsLogin(true);\r\n  }, [setIsLogin]);\r\n  const onFinish = values => {\r\n    setLoading(true);\r\n    fetch(`${baseUrl}/doConnect`, {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(values),\r\n    }).then(async res => {\r\n      if (res.ok) {\r\n        const { code, message: msg, token } = await res.json();\r\n        setLoading(false);\r\n        if (code === 0) {\r\n          message.success(msg);\r\n          localStorage.setItem('token', token);\r\n          setIsLogin(true);\r\n        } else {\r\n          message.error(msg);\r\n        }\r\n      } else {\r\n        window.alert('登录失败');\r\n        setLoading(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      hideRequiredMark={true}\r\n      name=\"basic\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <Form.Item\r\n        label=\"IP地址\"\r\n        name=\"host\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入IP地址!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"端口号\"\r\n        name=\"port\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入端口号!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default Login;\r\n","import React, { useState, useContext } from 'react';\r\nimport { Card, Input, Button, message } from 'antd';\r\nimport LoginContext from '../context';\r\nconst { Search } = Input;\r\nconst baseUrl = 'http://172.30.67.81:8080';\r\nconst Cmd = () => {\r\n  const [Info, setInfo] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const { setIsLogin } = useContext(LoginContext);\r\n  const onSend = values => {\r\n    setLoading(true);\r\n    fetch(`${baseUrl}/doExec`, {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ cmd: values, token: localStorage.getItem('token') }),\r\n    }).then(async resp => {\r\n      if (resp.ok) {\r\n        const { code, message: msg, res } = await resp.json();\r\n        if (code === 0) {\r\n          message.success(msg);\r\n          setInfo([{ str: res, cmd: values, id: values + Info.length }, ...Info]);\r\n        } else {\r\n          message.error(msg);\r\n          if (code === 100) {\r\n            localStorage.removeItem('token');\r\n            setIsLogin(false);\r\n          }\r\n        }\r\n        setLoading(false);\r\n      } else {\r\n        message.error('请求失败');\r\n        setLoading(false);\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Card\r\n      title={\r\n        <div>\r\n          <Search\r\n            onSearch={onSend}\r\n            placeholder=\"input command\"\r\n            enterButton=\"Send\"\r\n            loading={loading}\r\n          />\r\n        </div>\r\n      }\r\n      extra={\r\n        <Button\r\n          type=\"link\"\r\n          onClick={e => {\r\n            localStorage.removeItem('token');\r\n            setIsLogin(false);\r\n          }}\r\n        >\r\n          Logout\r\n        </Button>\r\n      }\r\n    >\r\n      <Card\r\n        title=\"Infomation\"\r\n        extra={\r\n          <Button\r\n            type=\"link\"\r\n            onClick={e => {\r\n              setInfo([]);\r\n            }}\r\n          >\r\n            clear\r\n          </Button>\r\n        }\r\n      >\r\n        {Info.map(item => (\r\n          <Card\r\n            key={item.id}\r\n            style={{ marginTop: 16 }}\r\n            type=\"inner\"\r\n            title={item.cmd}\r\n            extra={\r\n              <Button\r\n                type=\"link\"\r\n                onClick={e => {\r\n                  const index = Info.findIndex(obj => obj.id === item.id);\r\n                  console.log(index);\r\n                  const newInfo = JSON.parse(JSON.stringify(Info));\r\n                  newInfo.splice(index, 1);\r\n                  setInfo(newInfo);\r\n                }}\r\n              >\r\n                delete\r\n              </Button>\r\n            }\r\n          >\r\n            <article>\r\n              {item.str.split('\\n').map(item => (\r\n                <p>{item}</p>\r\n              ))}\r\n            </article>\r\n          </Card>\r\n        ))}\r\n      </Card>\r\n    </Card>\r\n  );\r\n};\r\nexport default Cmd;\r\n","import './App.css';\nimport Login from './pages/Login';\nimport Cmd from './pages/Cmd';\nimport { useState } from 'react';\nimport LoginContext from './context';\nfunction App() {\n  const [isLogin, setIsLogin] = useState(false);\n  return (\n    <LoginContext.Provider value={{ isLogin, setIsLogin }}>\n      {isLogin ? <Cmd /> : <Login />}\n    </LoginContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}